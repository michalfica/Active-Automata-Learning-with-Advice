<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="34" passed="34" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-04T15:11:57 CEST" name="Surefire suite" finished-at="2025-05-04T15:11:59 CEST" duration-ms="1885">
    <groups>
    </groups>
    <test started-at="2025-05-04T15:11:57 CEST" name="Surefire test" finished-at="2025-05-04T15:11:59 CEST" duration-ms="1885">
      <class name="de.learnlib.oracle.equivalence.RandomWMethodEQOracleTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.RandomWMethodEQOracleTest@173ed316]" started-at="2025-05-04T15:11:58 CEST" name="setUp" finished-at="2025-05-04T15:11:58 CEST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGeneratedEQQueries()[pri:0, instance:de.learnlib.oracle.equivalence.RandomWMethodEQOracleTest@173ed316]" started-at="2025-05-04T15:11:58 CEST" name="testGeneratedEQQueries" finished-at="2025-05-04T15:11:58 CEST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratedEQQueries -->
        <test-method signature="testNumberOfTotalQueries()[pri:0, instance:de.learnlib.oracle.equivalence.RandomWMethodEQOracleTest@173ed316]" started-at="2025-05-04T15:11:58 CEST" name="testNumberOfTotalQueries" finished-at="2025-05-04T15:11:58 CEST" depends-on-methods="de.learnlib.oracle.equivalence.AbstractEQOracleTest.testGeneratedEQQueries" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNumberOfTotalQueries -->
      </class> <!-- de.learnlib.oracle.equivalence.RandomWMethodEQOracleTest -->
      <class name="de.learnlib.oracle.equivalence.TestWordEQOracleBatchTest">
        <test-method signature="testBatchMode()[pri:0, instance:de.learnlib.oracle.equivalence.TestWordEQOracleBatchTest@76b1e9b8]" started-at="2025-05-04T15:11:59 CEST" name="testBatchMode" finished-at="2025-05-04T15:11:59 CEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBatchMode -->
      </class> <!-- de.learnlib.oracle.equivalence.TestWordEQOracleBatchTest -->
      <class name="de.learnlib.oracle.equivalence.IncrementalWMethodEQOracleTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.IncrementalWMethodEQOracleTest@248e319b]" started-at="2025-05-04T15:11:59 CEST" name="setUp" finished-at="2025-05-04T15:11:59 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGeneratedEQQueries()[pri:0, instance:de.learnlib.oracle.equivalence.IncrementalWMethodEQOracleTest@248e319b]" started-at="2025-05-04T15:11:59 CEST" name="testGeneratedEQQueries" finished-at="2025-05-04T15:11:59 CEST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratedEQQueries -->
      </class> <!-- de.learnlib.oracle.equivalence.IncrementalWMethodEQOracleTest -->
      <class name="de.learnlib.oracle.equivalence.spmm.WMethodEQOracleTest">
        <test-method signature="testOracle()[pri:0, instance:de.learnlib.oracle.equivalence.spmm.WMethodEQOracleTest@793f29ff]" started-at="2025-05-04T15:11:59 CEST" name="testOracle" finished-at="2025-05-04T15:11:59 CEST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOracle -->
      </class> <!-- de.learnlib.oracle.equivalence.spmm.WMethodEQOracleTest -->
      <class name="de.learnlib.oracle.equivalence.RandomWordsEQOracleTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.RandomWordsEQOracleTest@46cdf8bd]" started-at="2025-05-04T15:11:57 CEST" name="setUp" finished-at="2025-05-04T15:11:57 CEST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGeneratedEQQueries()[pri:0, instance:de.learnlib.oracle.equivalence.RandomWordsEQOracleTest@46cdf8bd]" started-at="2025-05-04T15:11:57 CEST" name="testGeneratedEQQueries" finished-at="2025-05-04T15:11:57 CEST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratedEQQueries -->
        <test-method signature="testNumberOfTotalQueries()[pri:0, instance:de.learnlib.oracle.equivalence.RandomWordsEQOracleTest@46cdf8bd]" started-at="2025-05-04T15:11:57 CEST" name="testNumberOfTotalQueries" finished-at="2025-05-04T15:11:57 CEST" depends-on-methods="de.learnlib.oracle.equivalence.AbstractEQOracleTest.testGeneratedEQQueries" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNumberOfTotalQueries -->
      </class> <!-- de.learnlib.oracle.equivalence.RandomWordsEQOracleTest -->
      <class name="de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:57 CEST" name="setUp" finished-at="2025-05-04T15:11:58 CEST" duration-ms="970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindCounterExample()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="testFindCounterExample" finished-at="2025-05-04T15:11:58 CEST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindCounterExample -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="tearDown" finished-at="2025-05-04T15:11:58 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="setUp" finished-at="2025-05-04T15:11:58 CEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testIsCounterExample()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="testIsCounterExample" finished-at="2025-05-04T15:11:58 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsCounterExample -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="tearDown" finished-at="2025-05-04T15:11:58 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="setUp" finished-at="2025-05-04T15:11:58 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddWord()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="testAddWord" finished-at="2025-05-04T15:11:58 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddWord -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="tearDown" finished-at="2025-05-04T15:11:58 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="setUp" finished-at="2025-05-04T15:11:58 CEST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetMultiplier()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="testGetMultiplier" finished-at="2025-05-04T15:11:58 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMultiplier -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="tearDown" finished-at="2025-05-04T15:11:58 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="setUp" finished-at="2025-05-04T15:11:58 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testNextInput()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="testNextInput" finished-at="2025-05-04T15:11:58 CEST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextInput -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="tearDown" finished-at="2025-05-04T15:11:58 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="setUp" finished-at="2025-05-04T15:11:58 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPre()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="testPre" finished-at="2025-05-04T15:11:58 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPre -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest@6d4d66d2]" started-at="2025-05-04T15:11:58 CEST" name="tearDown" finished-at="2025-05-04T15:11:58 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- de.learnlib.oracle.equivalence.MealyBFInclusionOracleTest -->
      <class name="de.learnlib.oracle.equivalence.mealy.RandomWalkEQOracleTest">
        <test-method signature="testOracle()[pri:0, instance:de.learnlib.oracle.equivalence.mealy.RandomWalkEQOracleTest@543295b0]" started-at="2025-05-04T15:11:59 CEST" name="testOracle" finished-at="2025-05-04T15:11:59 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOracle -->
      </class> <!-- de.learnlib.oracle.equivalence.mealy.RandomWalkEQOracleTest -->
      <class name="de.learnlib.oracle.equivalence.spa.WpMethodEQOracleTest">
        <test-method signature="testOracle()[pri:0, instance:de.learnlib.oracle.equivalence.spa.WpMethodEQOracleTest@25ce9dc4]" started-at="2025-05-04T15:11:58 CEST" name="testOracle" finished-at="2025-05-04T15:11:59 CEST" duration-ms="90" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOracle -->
      </class> <!-- de.learnlib.oracle.equivalence.spa.WpMethodEQOracleTest -->
      <class name="de.learnlib.oracle.equivalence.DisproveFirstOracleTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.DisproveFirstOracleTest@27406a17]" started-at="2025-05-04T15:11:59 CEST" name="setUp" finished-at="2025-05-04T15:11:59 CEST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindCounterExample()[pri:0, instance:de.learnlib.oracle.equivalence.DisproveFirstOracleTest@27406a17]" started-at="2025-05-04T15:11:59 CEST" name="testFindCounterExample" finished-at="2025-05-04T15:11:59 CEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindCounterExample -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.DisproveFirstOracleTest@27406a17]" started-at="2025-05-04T15:11:59 CEST" name="tearDown" finished-at="2025-05-04T15:11:59 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.DisproveFirstOracleTest@27406a17]" started-at="2025-05-04T15:11:59 CEST" name="setUp" finished-at="2025-05-04T15:11:59 CEST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetPropertyOracles()[pri:0, instance:de.learnlib.oracle.equivalence.DisproveFirstOracleTest@27406a17]" started-at="2025-05-04T15:11:59 CEST" name="testGetPropertyOracles" finished-at="2025-05-04T15:11:59 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPropertyOracles -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.DisproveFirstOracleTest@27406a17]" started-at="2025-05-04T15:11:59 CEST" name="tearDown" finished-at="2025-05-04T15:11:59 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- de.learnlib.oracle.equivalence.DisproveFirstOracleTest -->
      <class name="de.learnlib.oracle.equivalence.vpa.RandomWellMatchedWordsEQOracleTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.vpa.RandomWellMatchedWordsEQOracleTest@69e153c5]" started-at="2025-05-04T15:11:58 CEST" name="setUp" finished-at="2025-05-04T15:11:58 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGeneratedEQQueries()[pri:0, instance:de.learnlib.oracle.equivalence.vpa.RandomWellMatchedWordsEQOracleTest@69e153c5]" started-at="2025-05-04T15:11:58 CEST" name="testGeneratedEQQueries" finished-at="2025-05-04T15:11:58 CEST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratedEQQueries -->
      </class> <!-- de.learnlib.oracle.equivalence.vpa.RandomWellMatchedWordsEQOracleTest -->
      <class name="de.learnlib.oracle.equivalence.sba.WMethodEQOracleTest">
        <test-method signature="testOracle()[pri:0, instance:de.learnlib.oracle.equivalence.sba.WMethodEQOracleTest@2a265ea9]" started-at="2025-05-04T15:11:58 CEST" name="testOracle" finished-at="2025-05-04T15:11:58 CEST" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOracle -->
      </class> <!-- de.learnlib.oracle.equivalence.sba.WMethodEQOracleTest -->
      <class name="de.learnlib.oracle.equivalence.EmptyAutomatonOracleTest">
        <test-method signature="testEmptyDFA()[pri:0, instance:de.learnlib.oracle.equivalence.EmptyAutomatonOracleTest@563f38c4]" started-at="2025-05-04T15:11:59 CEST" name="testEmptyDFA" finished-at="2025-05-04T15:11:59 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyDFA -->
        <test-method signature="testEmptyMealy()[pri:0, instance:de.learnlib.oracle.equivalence.EmptyAutomatonOracleTest@563f38c4]" started-at="2025-05-04T15:11:59 CEST" name="testEmptyMealy" finished-at="2025-05-04T15:11:59 CEST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMealy -->
      </class> <!-- de.learnlib.oracle.equivalence.EmptyAutomatonOracleTest -->
      <class name="de.learnlib.oracle.equivalence.SampleSetEQOracleTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.SampleSetEQOracleTest@5d0bf09b]" started-at="2025-05-04T15:11:59 CEST" name="setUp" finished-at="2025-05-04T15:11:59 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGeneratedEQQueries()[pri:0, instance:de.learnlib.oracle.equivalence.SampleSetEQOracleTest@5d0bf09b]" started-at="2025-05-04T15:11:59 CEST" name="testGeneratedEQQueries" finished-at="2025-05-04T15:11:59 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratedEQQueries -->
        <test-method signature="testName()[pri:0, instance:de.learnlib.oracle.equivalence.SampleSetEQOracleTest@5d0bf09b]" started-at="2025-05-04T15:11:59 CEST" name="testName" finished-at="2025-05-04T15:11:59 CEST" depends-on-methods="de.learnlib.oracle.equivalence.AbstractEQOracleTest.testGeneratedEQQueries" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testName -->
      </class> <!-- de.learnlib.oracle.equivalence.SampleSetEQOracleTest -->
      <class name="de.learnlib.oracle.equivalence.CExFirstOracleTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.CExFirstOracleTest@17f62e33]" started-at="2025-05-04T15:11:59 CEST" name="setUp" finished-at="2025-05-04T15:11:59 CEST" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindCounterExample()[pri:0, instance:de.learnlib.oracle.equivalence.CExFirstOracleTest@17f62e33]" started-at="2025-05-04T15:11:59 CEST" name="testFindCounterExample" finished-at="2025-05-04T15:11:59 CEST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindCounterExample -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.CExFirstOracleTest@17f62e33]" started-at="2025-05-04T15:11:59 CEST" name="tearDown" finished-at="2025-05-04T15:11:59 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.CExFirstOracleTest@17f62e33]" started-at="2025-05-04T15:11:59 CEST" name="setUp" finished-at="2025-05-04T15:11:59 CEST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetPropertyOracles()[pri:0, instance:de.learnlib.oracle.equivalence.CExFirstOracleTest@17f62e33]" started-at="2025-05-04T15:11:59 CEST" name="testGetPropertyOracles" finished-at="2025-05-04T15:11:59 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPropertyOracles -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.CExFirstOracleTest@17f62e33]" started-at="2025-05-04T15:11:59 CEST" name="tearDown" finished-at="2025-05-04T15:11:59 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- de.learnlib.oracle.equivalence.CExFirstOracleTest -->
      <class name="de.learnlib.oracle.equivalence.DFABFInclusionOracleTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="setUp" finished-at="2025-05-04T15:11:59 CEST" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindCounterExample()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="testFindCounterExample" finished-at="2025-05-04T15:11:59 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindCounterExample -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="tearDown" finished-at="2025-05-04T15:11:59 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="setUp" finished-at="2025-05-04T15:11:59 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testIsCounterExample()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="testIsCounterExample" finished-at="2025-05-04T15:11:59 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsCounterExample -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="tearDown" finished-at="2025-05-04T15:11:59 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="setUp" finished-at="2025-05-04T15:11:59 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddWord()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="testAddWord" finished-at="2025-05-04T15:11:59 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddWord -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="tearDown" finished-at="2025-05-04T15:11:59 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="setUp" finished-at="2025-05-04T15:11:59 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetMultiplier()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="testGetMultiplier" finished-at="2025-05-04T15:11:59 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMultiplier -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="tearDown" finished-at="2025-05-04T15:11:59 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="setUp" finished-at="2025-05-04T15:11:59 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testNextInput()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="testNextInput" finished-at="2025-05-04T15:11:59 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextInput -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="tearDown" finished-at="2025-05-04T15:11:59 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="setUp" finished-at="2025-05-04T15:11:59 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPre()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="testPre" finished-at="2025-05-04T15:11:59 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPre -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:de.learnlib.oracle.equivalence.DFABFInclusionOracleTest@2af004b]" started-at="2025-05-04T15:11:59 CEST" name="tearDown" finished-at="2025-05-04T15:11:59 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- de.learnlib.oracle.equivalence.DFABFInclusionOracleTest -->
      <class name="de.learnlib.oracle.equivalence.spa.WMethodEQOracleTest">
        <test-method signature="testOracle()[pri:0, instance:de.learnlib.oracle.equivalence.spa.WMethodEQOracleTest@74ea2410]" started-at="2025-05-04T15:11:59 CEST" name="testOracle" finished-at="2025-05-04T15:11:59 CEST" duration-ms="79" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOracle -->
      </class> <!-- de.learnlib.oracle.equivalence.spa.WMethodEQOracleTest -->
      <class name="de.learnlib.oracle.equivalence.RandomWpMethodEQOracleTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:de.learnlib.oracle.equivalence.RandomWpMethodEQOracleTest@3e8c3cb]" started-at="2025-05-04T15:11:59 CEST" name="setUp" finished-at="2025-05-04T15:11:59 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGeneratedEQQueries()[pri:0, instance:de.learnlib.oracle.equivalence.RandomWpMethodEQOracleTest@3e8c3cb]" started-at="2025-05-04T15:11:59 CEST" name="testGeneratedEQQueries" finished-at="2025-05-04T15:11:59 CEST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratedEQQueries -->
        <test-method signature="testNumberOfTotalQueries()[pri:0, instance:de.learnlib.oracle.equivalence.RandomWpMethodEQOracleTest@3e8c3cb]" started-at="2025-05-04T15:11:59 CEST" name="testNumberOfTotalQueries" finished-at="2025-05-04T15:11:59 CEST" depends-on-methods="de.learnlib.oracle.equivalence.AbstractEQOracleTest.testGeneratedEQQueries" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNumberOfTotalQueries -->
      </class> <!-- de.learnlib.oracle.equivalence.RandomWpMethodEQOracleTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
