<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="7" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-04T15:12:41 CEST" name="Surefire suite" finished-at="2025-05-04T15:12:41 CEST" duration-ms="476">
    <groups>
    </groups>
    <test started-at="2025-05-04T15:12:41 CEST" name="Surefire test" finished-at="2025-05-04T15:12:41 CEST" duration-ms="476">
      <class name="de.learnlib.algorithm.ostia.OSTIATest">
        <test-method signature="testEquivalence(int)[pri:0, instance:de.learnlib.algorithm.ostia.OSTIATest@6631f5ca]" started-at="2025-05-04T15:12:41 CEST" name="testEquivalence" data-provider="sizes" finished-at="2025-05-04T15:12:41 CEST" duration-ms="85" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquivalence -->
        <test-method signature="testEquivalence(int)[pri:0, instance:de.learnlib.algorithm.ostia.OSTIATest@6631f5ca]" started-at="2025-05-04T15:12:41 CEST" name="testEquivalence" data-provider="sizes" finished-at="2025-05-04T15:12:41 CEST" duration-ms="42" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquivalence -->
        <test-method signature="testEquivalence(int)[pri:0, instance:de.learnlib.algorithm.ostia.OSTIATest@6631f5ca]" started-at="2025-05-04T15:12:41 CEST" name="testEquivalence" data-provider="sizes" finished-at="2025-05-04T15:12:41 CEST" duration-ms="105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquivalence -->
        <test-method signature="testEquivalence(int)[pri:0, instance:de.learnlib.algorithm.ostia.OSTIATest@6631f5ca]" started-at="2025-05-04T15:12:41 CEST" name="testEquivalence" data-provider="sizes" finished-at="2025-05-04T15:12:41 CEST" duration-ms="192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquivalence -->
        <test-method signature="testInconsistentSamples()[pri:0, instance:de.learnlib.algorithm.ostia.OSTIATest@6631f5ca]" started-at="2025-05-04T15:12:41 CEST" name="testInconsistentSamples" finished-at="2025-05-04T15:12:41 CEST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[For input '[0, 1, 0, 1]' the state output is '[1]' but training sample has remaining suffix '[0]']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: For input '[0, 1, 0, 1]' the state output is '[1]' but training sample has remaining suffix '[0]'
at de.learnlib.algorithm.ostia@0.19.0-SNAPSHOT/de.learnlib.algorithm.ostia.OSTIA.buildPttOnward(OSTIA.java:139)
at de.learnlib.algorithm.ostia@0.19.0-SNAPSHOT/de.learnlib.algorithm.ostia.OSTIA.buildPtt(OSTIA.java:91)
at de.learnlib.algorithm.ostia@0.19.0-SNAPSHOT/de.learnlib.algorithm.ostia.OSTIATest.testInconsistentSamples(OSTIATest.java:98)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:102)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:91)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInconsistentSamples -->
        <test-method signature="testStaticInvocation()[pri:0, instance:de.learnlib.algorithm.ostia.OSTIATest@6631f5ca]" started-at="2025-05-04T15:12:41 CEST" name="testStaticInvocation" finished-at="2025-05-04T15:12:41 CEST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStaticInvocation -->
        <test-method signature="testVisualization()[pri:0, instance:de.learnlib.algorithm.ostia.OSTIATest@6631f5ca]" started-at="2025-05-04T15:12:41 CEST" name="testVisualization" finished-at="2025-05-04T15:12:41 CEST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVisualization -->
      </class> <!-- de.learnlib.algorithm.ostia.OSTIATest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
