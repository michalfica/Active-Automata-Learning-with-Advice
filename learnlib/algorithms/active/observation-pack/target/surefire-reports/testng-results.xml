<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="11" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-04T15:12:12 CEST" name="Surefire suite" finished-at="2025-05-04T15:12:13 CEST" duration-ms="1024">
    <groups>
    </groups>
    <test started-at="2025-05-04T15:12:12 CEST" name="Surefire test" finished-at="2025-05-04T15:12:13 CEST" duration-ms="1024">
      <class name="de.learnlib.algorithm.observationpack.OPLearnerMealyResumableLearnerTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:de.learnlib.algorithm.observationpack.OPLearnerMealyResumableLearnerTest@d23e042]" started-at="2025-05-04T15:12:13 CEST" name="setup" finished-at="2025-05-04T15:12:13 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSuspendAndResumeLearner()[pri:0, instance:de.learnlib.algorithm.observationpack.OPLearnerMealyResumableLearnerTest@d23e042]" started-at="2025-05-04T15:12:13 CEST" name="testSuspendAndResumeLearner" finished-at="2025-05-04T15:12:13 CEST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuspendAndResumeLearner -->
      </class> <!-- de.learnlib.algorithm.observationpack.OPLearnerMealyResumableLearnerTest -->
      <class name="de.learnlib.algorithm.observationpack.OPLearnerMealyGrowingAlphabetTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:de.learnlib.algorithm.observationpack.OPLearnerMealyGrowingAlphabetTest@3aa078fd]" started-at="2025-05-04T15:12:13 CEST" name="setup" finished-at="2025-05-04T15:12:13 CEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGrowingAlphabet()[pri:0, instance:de.learnlib.algorithm.observationpack.OPLearnerMealyGrowingAlphabetTest@3aa078fd]" started-at="2025-05-04T15:12:13 CEST" name="testGrowingAlphabet" finished-at="2025-05-04T15:12:13 CEST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGrowingAlphabet -->
        <test-method signature="testInitialAlphabet()[pri:0, instance:de.learnlib.algorithm.observationpack.OPLearnerMealyGrowingAlphabetTest@3aa078fd]" started-at="2025-05-04T15:12:13 CEST" name="testInitialAlphabet" finished-at="2025-05-04T15:12:13 CEST" duration-ms="1" status="PASS">
          <exception class="net.automatalib.exception.GrowingAlphabetNotSupportedException">
            <message>
              <![CDATA[The alphabet '[0, 1, 2, 3, 4]' does not support growing]]>
            </message>
            <full-stacktrace>
              <![CDATA[net.automatalib.exception.GrowingAlphabetNotSupportedException: The alphabet '[0, 1, 2, 3, 4]' does not support growing
at net.automatalib.api@0.12.0/net.automatalib.alphabet.Alphabet.asGrowingAlphabetOrThrowException(Alphabet.java:131)
at de.learnlib.algorithm.observationpack@0.19.0-SNAPSHOT/de.learnlib.algorithm.observationpack.AbstractOPLearner.addAlphabetSymbol(AbstractOPLearner.java:235)
at de.learnlib.testsupport.AbstractGrowingAlphabetTest.testAlphabet(AbstractGrowingAlphabetTest.java:103)
at de.learnlib.testsupport.AbstractGrowingAlphabetTest.testInitialAlphabet(AbstractGrowingAlphabetTest.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- net.automatalib.exception.GrowingAlphabetNotSupportedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialAlphabet -->
      </class> <!-- de.learnlib.algorithm.observationpack.OPLearnerMealyGrowingAlphabetTest -->
      <class name="de.learnlib.algorithm.observationpack.OPLearnerDFAResumableLearnerTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:de.learnlib.algorithm.observationpack.OPLearnerDFAResumableLearnerTest@2d0399f4]" started-at="2025-05-04T15:12:13 CEST" name="setup" finished-at="2025-05-04T15:12:13 CEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSuspendAndResumeLearner()[pri:0, instance:de.learnlib.algorithm.observationpack.OPLearnerDFAResumableLearnerTest@2d0399f4]" started-at="2025-05-04T15:12:13 CEST" name="testSuspendAndResumeLearner" finished-at="2025-05-04T15:12:13 CEST" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuspendAndResumeLearner -->
      </class> <!-- de.learnlib.algorithm.observationpack.OPLearnerDFAResumableLearnerTest -->
      <class name="de.learnlib.algorithm.observationpack.OPLearnerMooreGrowingAlphabetTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:de.learnlib.algorithm.observationpack.OPLearnerMooreGrowingAlphabetTest@46d59067]" started-at="2025-05-04T15:12:13 CEST" name="setup" finished-at="2025-05-04T15:12:13 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGrowingAlphabet()[pri:0, instance:de.learnlib.algorithm.observationpack.OPLearnerMooreGrowingAlphabetTest@46d59067]" started-at="2025-05-04T15:12:13 CEST" name="testGrowingAlphabet" finished-at="2025-05-04T15:12:13 CEST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGrowingAlphabet -->
        <test-method signature="testInitialAlphabet()[pri:0, instance:de.learnlib.algorithm.observationpack.OPLearnerMooreGrowingAlphabetTest@46d59067]" started-at="2025-05-04T15:12:13 CEST" name="testInitialAlphabet" finished-at="2025-05-04T15:12:13 CEST" duration-ms="0" status="PASS">
          <exception class="net.automatalib.exception.GrowingAlphabetNotSupportedException">
            <message>
              <![CDATA[The alphabet '[0, 1, 2, 3, 4]' does not support growing]]>
            </message>
            <full-stacktrace>
              <![CDATA[net.automatalib.exception.GrowingAlphabetNotSupportedException: The alphabet '[0, 1, 2, 3, 4]' does not support growing
at net.automatalib.api@0.12.0/net.automatalib.alphabet.Alphabet.asGrowingAlphabetOrThrowException(Alphabet.java:131)
at de.learnlib.algorithm.observationpack@0.19.0-SNAPSHOT/de.learnlib.algorithm.observationpack.AbstractOPLearner.addAlphabetSymbol(AbstractOPLearner.java:235)
at de.learnlib.testsupport.AbstractGrowingAlphabetTest.testAlphabet(AbstractGrowingAlphabetTest.java:103)
at de.learnlib.testsupport.AbstractGrowingAlphabetTest.testInitialAlphabet(AbstractGrowingAlphabetTest.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- net.automatalib.exception.GrowingAlphabetNotSupportedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialAlphabet -->
      </class> <!-- de.learnlib.algorithm.observationpack.OPLearnerMooreGrowingAlphabetTest -->
      <class name="de.learnlib.algorithm.observationpack.OPLearnerDFAGrowingAlphabetTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:de.learnlib.algorithm.observationpack.OPLearnerDFAGrowingAlphabetTest@1f9e9475]" started-at="2025-05-04T15:12:13 CEST" name="setup" finished-at="2025-05-04T15:12:13 CEST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGrowingAlphabet()[pri:0, instance:de.learnlib.algorithm.observationpack.OPLearnerDFAGrowingAlphabetTest@1f9e9475]" started-at="2025-05-04T15:12:13 CEST" name="testGrowingAlphabet" finished-at="2025-05-04T15:12:13 CEST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGrowingAlphabet -->
        <test-method signature="testInitialAlphabet()[pri:0, instance:de.learnlib.algorithm.observationpack.OPLearnerDFAGrowingAlphabetTest@1f9e9475]" started-at="2025-05-04T15:12:13 CEST" name="testInitialAlphabet" finished-at="2025-05-04T15:12:13 CEST" duration-ms="1" status="PASS">
          <exception class="net.automatalib.exception.GrowingAlphabetNotSupportedException">
            <message>
              <![CDATA[The alphabet '[0, 1, 2, 3, 4]' does not support growing]]>
            </message>
            <full-stacktrace>
              <![CDATA[net.automatalib.exception.GrowingAlphabetNotSupportedException: The alphabet '[0, 1, 2, 3, 4]' does not support growing
at net.automatalib.api@0.12.0/net.automatalib.alphabet.Alphabet.asGrowingAlphabetOrThrowException(Alphabet.java:131)
at de.learnlib.algorithm.observationpack@0.19.0-SNAPSHOT/de.learnlib.algorithm.observationpack.AbstractOPLearner.addAlphabetSymbol(AbstractOPLearner.java:235)
at de.learnlib.testsupport.AbstractGrowingAlphabetTest.testAlphabet(AbstractGrowingAlphabetTest.java:103)
at de.learnlib.testsupport.AbstractGrowingAlphabetTest.testInitialAlphabet(AbstractGrowingAlphabetTest.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- net.automatalib.exception.GrowingAlphabetNotSupportedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialAlphabet -->
      </class> <!-- de.learnlib.algorithm.observationpack.OPLearnerDFAGrowingAlphabetTest -->
      <class name="de.learnlib.algorithm.observationpack.DTVisualizationTest">
        <test-method signature="testVisualizeDT()[pri:0, instance:de.learnlib.algorithm.observationpack.DTVisualizationTest@5c7933ad]" started-at="2025-05-04T15:12:12 CEST" name="testVisualizeDT" finished-at="2025-05-04T15:12:12 CEST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVisualizeDT -->
        <test-method signature="testVisualizeHyp()[pri:0, instance:de.learnlib.algorithm.observationpack.DTVisualizationTest@5c7933ad]" started-at="2025-05-04T15:12:12 CEST" name="testVisualizeHyp" finished-at="2025-05-04T15:12:12 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVisualizeHyp -->
      </class> <!-- de.learnlib.algorithm.observationpack.DTVisualizationTest -->
      <class name="de.learnlib.algorithm.observationpack.OPLearnerMooreResumableLearnerTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:de.learnlib.algorithm.observationpack.OPLearnerMooreResumableLearnerTest@169bb4dd]" started-at="2025-05-04T15:12:12 CEST" name="setup" finished-at="2025-05-04T15:12:12 CEST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSuspendAndResumeLearner()[pri:0, instance:de.learnlib.algorithm.observationpack.OPLearnerMooreResumableLearnerTest@169bb4dd]" started-at="2025-05-04T15:12:12 CEST" name="testSuspendAndResumeLearner" finished-at="2025-05-04T15:12:13 CEST" duration-ms="789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuspendAndResumeLearner -->
      </class> <!-- de.learnlib.algorithm.observationpack.OPLearnerMooreResumableLearnerTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
